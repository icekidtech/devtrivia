generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id          String     @id @default(cuid())
  title       String
  description String?
  published   Boolean    @default(false)
  joinCode    String?    @unique
  createdAt   DateTime   @default(now())
  questions   Question[]
  ownerId     String
  owner       User       @relation(fields: [ownerId], references: [id])
  results     Result[]
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?  @unique
  password     String
  role         Role     @default(USER)
  profileImage String?  // Add this field
  createdAt    DateTime @default(now())
  quizzes      Quiz[]
  results      Result[]
}

model Question {
  id        String   @id @default(cuid())
  text      String
  quizId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  answers   Answer[]
  correctId String?

  @@unique([text, quizId]) // Add a unique constraint
}

model Answer {
  id         String   @id @default(cuid())
  text       String
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
  isCorrect  Boolean  @default(false)
}

model Result {
  id            String   @id @default(uuid())
  userId        String
  quizId        String
  score         Int
  totalQuestions Int
  correctAnswers Int
  answersJson   String?  // Store selected answers as JSON
  createdAt     DateTime @default(now())
  
  user          User     @relation(fields: [userId], references: [id])
  quiz          Quiz     @relation(fields: [quizId], references: [id])
}

enum Role {
  ADMIN
  MODERATOR
  USER
}
